{"version":3,"file":"static/js/495.3aa5b2b3.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.js","pages/MoviesPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField } from 'formik';\n\nexport const Searchbar = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: ${p => p.theme.spacing(6)};\n  padding-left: ${p => p.theme.spacing(6)};\n  padding-top: ${p => p.theme.spacing(6)};\n  padding-bottom: ${p => p.theme.spacing(6)};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.grey};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Field = styled(FormikField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.spacing(1)};\n  padding-right: ${p => p.theme.spacing(1)};\n`;\n\nexport const FormGroup = styled.label`\n  width: 100%;\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchMoviesWraper = styled.div`\n  margin: 0 auto;\n  margin-top: ${p => p.theme.spacing(4)};\n  text-align: center;\n`;\n\nexport const SearchMovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: ${p => p.theme.spacing(4)};\n  row-gap: ${p => p.theme.spacing(4)};\n  justify-content: center;\n`;\n\nexport const SearchMovieCard = styled.li`\n  flex-basis: calc((100% - 48px) / 4);\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  border-radius: ${p => p.theme.radii.lg};\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Formik } from 'formik';\nimport {\n  Searchbar,\n  Form,\n  Field,\n  FormGroup,\n  FormBtn,\n  SearchMoviesWraper,\n  SearchMovieList,\n  SearchMovieCard,\n} from './Movies.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Movies = ({ onSubmit, results }) => {\n  return (\n    <>\n      <Searchbar>\n        <Formik\n          initialValues={{\n            query: '',\n          }}\n          onSubmit={(values, actions) => {\n            onSubmit(values);\n            actions.resetForm();\n          }}\n        >\n          <Form>\n            <FormBtn type=\"submit\">\n              <BsSearch />\n            </FormBtn>\n\n            <FormGroup>\n              <Field\n                name=\"query\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n              />\n            </FormGroup>\n          </Form>\n        </Formik>\n      </Searchbar>\n\n      <SearchMoviesWraper>\n        <SearchMovieList>\n          {results.map(movie => {\n            const { id, title, poster_path } = movie;\n            const baseURL = 'https://image.tmdb.org/t/p/w200';\n            const poster = baseURL + poster_path;\n            return (\n              <SearchMovieCard key={id}>\n                <img src={poster} alt={title} />\n                <p>{title}</p>\n              </SearchMovieCard>\n            );\n          })}\n        </SearchMovieList>\n      </SearchMoviesWraper>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { fetchMoviesByQuery } from '../services/api';\nimport { BallTriangle } from 'react-loader-spinner';\nimport { Movies } from '../components/Movies/Movies';\n\nexport default function CreateMoviePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const userQuery = query.slice(query.indexOf('/') + 1, query.length);\n    if (userQuery.trim() === '') {\n      return;\n    }\n    const onfindMovie = async () => {\n      const responce = await fetchMoviesByQuery(userQuery);\n      const { results } = responce;\n      console.log(results);\n      if (results.length === 0) {\n        return toast.error(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n      setMovies(results);\n    };\n\n    try {\n      setIsLoading(true);\n      setError(false);\n      onfindMovie();\n    } catch (error) {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query, error]);\n\n  const handleSubmit = newQuery => {\n    const userRequest = newQuery.query;\n    setQuery(`${Date.now()}/${userRequest}`);\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <Movies onSubmit={handleSubmit} results={movies} />\n      {isLoading && (\n        <BallTriangle\n          height={100}\n          width={100}\n          radius={5}\n          color=\"#4fa94d\"\n          ariaLabel=\"ball-triangle-loading\"\n          wrapperClass={{}}\n          wrapperStyle=\"\"\n          visible={true}\n        />\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a74d577cd193b62ed06f68b282af6a8f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n"],"names":["Searchbar","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","white","grey","Form","FormikForm","_templateObject2","Field","FormikField","_templateObject3","FormGroup","_templateObject4","FormBtn","_templateObject5","SearchMoviesWraper","_templateObject6","SearchMovieList","_templateObject7","SearchMovieCard","_templateObject8","radii","lg","Movies","_ref","onSubmit","results","_jsxs","_Fragment","children","_jsx","Formik","initialValues","query","values","actions","resetForm","type","BsSearch","name","autoComplete","autoFocus","placeholder","map","movie","id","title","poster","poster_path","src","alt","CreateMoviePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setQuery","_useState7","_useState8","movies","setMovies","useEffect","userQuery","slice","indexOf","length","trim","onfindMovie","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","fetchMoviesByQuery","sent","console","log","abrupt","toast","stop","apply","arguments","newQuery","userRequest","concat","Date","now","BallTriangle","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","API_KEY","axios","fetchTrendingMovies","response","data","_ref2","_callee2","_context2","_x"],"sourceRoot":""}